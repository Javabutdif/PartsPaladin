// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PartsPaladin.Data;

#nullable disable

namespace PartsPaladin.Migrations
{
    [DbContext(typeof(PartsPaladinContext))]
    [Migration("20240525173644_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PartsPaladin.Models.Cart", b =>
                {
                    b.Property<int?>("cart_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("cart_id"));

                    b.Property<int?>("customer_id")
                        .HasColumnType("int");

                    b.HasKey("cart_id");

                    b.HasIndex("customer_id");

                    b.ToTable("Cart");
                });

            modelBuilder.Entity("PartsPaladin.Models.CartItems", b =>
                {
                    b.Property<int?>("cart_item_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("cart_item_id"));

                    b.Property<int?>("cart_id")
                        .HasColumnType("int");

                    b.Property<int?>("product_id")
                        .HasColumnType("int");

                    b.Property<int?>("quantity")
                        .HasColumnType("int");

                    b.HasKey("cart_item_id");

                    b.HasIndex("cart_id");

                    b.HasIndex("product_id");

                    b.ToTable("CartItems");
                });

            modelBuilder.Entity("PartsPaladin.Models.Customer", b =>
                {
                    b.Property<int?>("customer_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("customer_id"));

                    b.Property<string>("customer_address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("customer_city")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("customer_email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("customer_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("customer_password")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("customer_id");

                    b.ToTable("Customer");
                });

            modelBuilder.Entity("PartsPaladin.Models.OrderDetails", b =>
                {
                    b.Property<int?>("order_detail_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("order_detail_id"));

                    b.Property<int?>("order_id")
                        .HasColumnType("int");

                    b.Property<int>("price")
                        .HasColumnType("int");

                    b.Property<int?>("product_id")
                        .HasColumnType("int");

                    b.Property<int?>("quantity")
                        .IsRequired()
                        .HasColumnType("int");

                    b.HasKey("order_detail_id");

                    b.HasIndex("order_id");

                    b.HasIndex("product_id");

                    b.ToTable("OrderDetails");
                });

            modelBuilder.Entity("PartsPaladin.Models.Orders", b =>
                {
                    b.Property<int?>("order_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("order_id"));

                    b.Property<int?>("customer_id")
                        .HasColumnType("int");

                    b.Property<string>("order_date")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("order_status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("order_total")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("order_id");

                    b.HasIndex("customer_id");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("PartsPaladin.Models.Product", b =>
                {
                    b.Property<int?>("product_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("product_id"));

                    b.Property<string>("product_description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("product_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("product_price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("product_quantity")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("product_id");

                    b.ToTable("Product");
                });

            modelBuilder.Entity("PartsPaladin.Models.Cart", b =>
                {
                    b.HasOne("PartsPaladin.Models.Customer", "Customer")
                        .WithMany("Carts")
                        .HasForeignKey("customer_id");

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("PartsPaladin.Models.CartItems", b =>
                {
                    b.HasOne("PartsPaladin.Models.Cart", "Cart")
                        .WithMany("CartItems")
                        .HasForeignKey("cart_id");

                    b.HasOne("PartsPaladin.Models.Product", "Product")
                        .WithMany("CartItems")
                        .HasForeignKey("product_id");

                    b.Navigation("Cart");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("PartsPaladin.Models.OrderDetails", b =>
                {
                    b.HasOne("PartsPaladin.Models.Orders", "Order")
                        .WithMany("OrderDetails")
                        .HasForeignKey("order_id");

                    b.HasOne("PartsPaladin.Models.Product", "Product")
                        .WithMany("OrderDetails")
                        .HasForeignKey("product_id");

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("PartsPaladin.Models.Orders", b =>
                {
                    b.HasOne("PartsPaladin.Models.Customer", "Customer")
                        .WithMany("Orders")
                        .HasForeignKey("customer_id");

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("PartsPaladin.Models.Cart", b =>
                {
                    b.Navigation("CartItems");
                });

            modelBuilder.Entity("PartsPaladin.Models.Customer", b =>
                {
                    b.Navigation("Carts");

                    b.Navigation("Orders");
                });

            modelBuilder.Entity("PartsPaladin.Models.Orders", b =>
                {
                    b.Navigation("OrderDetails");
                });

            modelBuilder.Entity("PartsPaladin.Models.Product", b =>
                {
                    b.Navigation("CartItems");

                    b.Navigation("OrderDetails");
                });
#pragma warning restore 612, 618
        }
    }
}
